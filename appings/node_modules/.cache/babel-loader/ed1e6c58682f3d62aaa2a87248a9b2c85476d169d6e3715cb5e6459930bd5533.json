{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrthu\\\\Desktop\\\\appings\\\\src\\\\Pages\\\\Second.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport RecordPlugin from 'wavesurfer.js/dist/plugins/record.esm.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Second = () => {\n  _s();\n  const [wavesurfer, setWaveSurfer] = useState(null);\n  const [record, setRecord] = useState(null);\n  const [isRecordingActive, setIsRecordingActive] = useState(false);\n  const [progressTime, setProgressTime] = useState('00:00');\n  useEffect(() => {\n    const createWaveSurfer = () => {\n      const wavesurferInstance = WaveSurfer.create({\n        container: '#mic',\n        waveColor: 'rgb(200, 0, 200)',\n        progressColor: 'rgb(100, 0, 100)'\n      });\n      setWaveSurfer(wavesurferInstance);\n      const recordInstance = wavesurferInstance.registerPlugin(RecordPlugin.create({\n        scrollingWaveform: true,\n        renderRecordedAudio: false\n      }));\n      setRecord(recordInstance);\n      recordInstance.on('record-end', blob => {\n        const container = document.querySelector('#recordings');\n        const recordedUrl = URL.createObjectURL(blob);\n        const recordedWaveSurfer = WaveSurfer.create({\n          container,\n          waveColor: 'rgb(200, 100, 0)',\n          progressColor: 'rgb(100, 50, 0)',\n          url: recordedUrl\n        });\n        const playButton = container.appendChild(document.createElement('button'));\n        playButton.textContent = 'Play';\n        playButton.onclick = () => recordedWaveSurfer.playPause();\n        recordedWaveSurfer.on('pause', () => playButton.textContent = 'Play');\n        recordedWaveSurfer.on('play', () => playButton.textContent = 'Pause');\n        const slider = document.createElement('input');\n        slider.type = 'range';\n        slider.min = '0';\n        slider.max = '100';\n        slider.value = '10';\n        slider.step = '1';\n        slider.addEventListener('input', e => {\n          const minPxPerSec = e.target.valueAsNumber;\n          recordedWaveSurfer.zoom(minPxPerSec * 100);\n        });\n        container.appendChild(slider);\n        const downloadLink = container.appendChild(document.createElement('a'));\n        Object.assign(downloadLink, {\n          href: recordedUrl,\n          download: 'recording.' + (blob.type.split(';')[0].split('/')[1] || 'webm'),\n          textContent: 'Download recording'\n        });\n      });\n      recordInstance.on('record-progress', time => {\n        updateProgress(time);\n      });\n    };\n    createWaveSurfer();\n\n    // Clean up function\n    return () => {\n      if (wavesurfer) {\n        wavesurfer.destroy();\n      }\n    };\n  }, []);\n  const updateProgress = time => {\n    const formattedTime = [Math.floor(time % 3600000 / 60000),\n    // minutes\n    Math.floor(time % 60000 / 1000) // seconds\n    ].map(v => v < 10 ? '0' + v : v).join(':');\n    setProgressTime(formattedTime);\n  };\n  const startRecording = () => {\n    const deviceId = 'default'; // You can modify this to use a selected device\n    record.startRecording({\n      deviceId\n    }).then(() => {\n      setIsRecordingActive(true);\n      setTimeout(stopRecording, 10000); // Stop recording after 10 seconds\n    });\n  };\n  const stopRecording = () => {\n    if (record.isRecording()) {\n      record.stopRecording();\n      setIsRecordingActive(false);\n    }\n  };\n  const handleRecordButtonClick = () => {\n    if (!isRecordingActive) {\n      startRecording();\n    } else {\n      stopRecording();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recordings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"progress\",\n      children: progressTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"record\",\n      onClick: handleRecordButtonClick,\n      children: isRecordingActive ? 'Stop' : 'Record'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"next\",\n      children: \"Next page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(Second, \"ZF+RnMpl1cbfyHe2L2aUcGOOElE=\");\n_c = Second;\nexport default Second;\nvar _c;\n$RefreshReg$(_c, \"Second\");","map":{"version":3,"names":["React","useState","useEffect","WaveSurfer","RecordPlugin","jsxDEV","_jsxDEV","Second","_s","wavesurfer","setWaveSurfer","record","setRecord","isRecordingActive","setIsRecordingActive","progressTime","setProgressTime","createWaveSurfer","wavesurferInstance","create","container","waveColor","progressColor","recordInstance","registerPlugin","scrollingWaveform","renderRecordedAudio","on","blob","document","querySelector","recordedUrl","URL","createObjectURL","recordedWaveSurfer","url","playButton","appendChild","createElement","textContent","onclick","playPause","slider","type","min","max","value","step","addEventListener","e","minPxPerSec","target","valueAsNumber","zoom","downloadLink","Object","assign","href","download","split","time","updateProgress","destroy","formattedTime","Math","floor","map","v","join","startRecording","deviceId","then","setTimeout","stopRecording","isRecording","handleRecordButtonClick","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mrthu/Desktop/appings/src/Pages/Second.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport RecordPlugin from 'wavesurfer.js/dist/plugins/record.esm.js';\r\n\r\nconst Second = () => {\r\n    const [wavesurfer, setWaveSurfer] = useState(null);\r\n  const [record, setRecord] = useState(null);\r\n  const [isRecordingActive, setIsRecordingActive] = useState(false);\r\n  const [progressTime, setProgressTime] = useState('00:00');\r\n\r\n  useEffect(() => {\r\n    const createWaveSurfer = () => {\r\n      const wavesurferInstance = WaveSurfer.create({\r\n        container: '#mic',\r\n        waveColor: 'rgb(200, 0, 200)',\r\n        progressColor: 'rgb(100, 0, 100)',\r\n      });\r\n\r\n      setWaveSurfer(wavesurferInstance);\r\n\r\n      const recordInstance = wavesurferInstance.registerPlugin(\r\n        RecordPlugin.create({ scrollingWaveform: true, renderRecordedAudio: false })\r\n      );\r\n\r\n      setRecord(recordInstance);\r\n\r\n      recordInstance.on('record-end', (blob) => {\r\n        const container = document.querySelector('#recordings');\r\n        const recordedUrl = URL.createObjectURL(blob);\r\n\r\n        const recordedWaveSurfer = WaveSurfer.create({\r\n          container,\r\n          waveColor: 'rgb(200, 100, 0)',\r\n          progressColor: 'rgb(100, 50, 0)',\r\n          url: recordedUrl,\r\n        });\r\n\r\n        const playButton = container.appendChild(document.createElement('button'));\r\n        playButton.textContent = 'Play';\r\n        playButton.onclick = () => recordedWaveSurfer.playPause();\r\n        recordedWaveSurfer.on('pause', () => (playButton.textContent = 'Play'));\r\n        recordedWaveSurfer.on('play', () => (playButton.textContent = 'Pause'));\r\n\r\n        const slider = document.createElement('input');\r\n        slider.type = 'range';\r\n        slider.min = '0';\r\n        slider.max = '100';\r\n        slider.value = '10';\r\n        slider.step = '1';\r\n        slider.addEventListener('input', (e) => {\r\n          const minPxPerSec = e.target.valueAsNumber;\r\n          recordedWaveSurfer.zoom(minPxPerSec * 100);\r\n        });\r\n        container.appendChild(slider);\r\n\r\n        const downloadLink = container.appendChild(document.createElement('a'));\r\n        Object.assign(downloadLink, {\r\n          href: recordedUrl,\r\n          download: 'recording.' + (blob.type.split(';')[0].split('/')[1] || 'webm'),\r\n          textContent: 'Download recording',\r\n        });\r\n      });\r\n\r\n      recordInstance.on('record-progress', (time) => {\r\n        updateProgress(time);\r\n      });\r\n    };\r\n\r\n    createWaveSurfer();\r\n\r\n    // Clean up function\r\n    return () => {\r\n      if (wavesurfer) {\r\n        wavesurfer.destroy();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const updateProgress = (time) => {\r\n    const formattedTime = [\r\n      Math.floor((time % 3600000) / 60000), // minutes\r\n      Math.floor((time % 60000) / 1000), // seconds\r\n    ]\r\n      .map((v) => (v < 10 ? '0' + v : v))\r\n      .join(':');\r\n    setProgressTime(formattedTime);\r\n  };\r\n\r\n  const startRecording = () => {\r\n    const deviceId = 'default'; // You can modify this to use a selected device\r\n    record.startRecording({ deviceId }).then(() => {\r\n      setIsRecordingActive(true);\r\n      setTimeout(stopRecording, 10000); // Stop recording after 10 seconds\r\n    });\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (record.isRecording()) {\r\n      record.stopRecording();\r\n      setIsRecordingActive(false);\r\n    }\r\n  };\r\n\r\n  const handleRecordButtonClick = () => {\r\n    if (!isRecordingActive) {\r\n      startRecording();\r\n    } else {\r\n      stopRecording();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <div id=\"mic\" />\r\n        <div id=\"recordings\" />\r\n        <div id=\"progress\">{progressTime}</div>\r\n        <button id=\"record\" onClick={handleRecordButtonClick}>\r\n            {isRecordingActive ? 'Stop' : 'Record'}\r\n        </button>\r\n        <button id=\"next\">Next page</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Second\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}